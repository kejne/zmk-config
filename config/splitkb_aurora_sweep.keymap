/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define BASE    0
#define NUM     1
#define SYM     2
#define NAV     3
#define MOUSE   4

&mt {
    //  flavor = "tap-preferred";
    // tapping_term_ms = <200>;

    flavor = "tap-preferred";
    require-prior-idle-ms = <125>;
    quick-tap-ms = <200>;
};

/ {
    combos {
        compatible = "zmk,combos";

        Esc {
            bindings = <&kp ESCAPE>;
            key-positions = <30 31>;
        };

        delete_thumb {
            bindings = <&kp DEL>;
            key-positions = <33 32>;
        };

        num_lock {
            bindings = <&tog 1>;
            key-positions = <29 25>;
        };

        nav_lock {
            bindings = <&tog 2>;
            key-positions = <20 24>;
        };

        fun_combo {
            bindings = <&tog 4>;
            key-positions = <9 19 29>;
        };
    };

    behaviors {
        f1_2: f1_2 {
            compatible = "zmk,behavior-tap-dance";
            label = "F1_2";
            #binding-cells = <0>;
            bindings = <&kp F1>, <&kp F2>;
        };

        f3_4: f3_4 {
            compatible = "zmk,behavior-tap-dance";
            label = "F3_4";
            #binding-cells = <0>;
            bindings = <&kp F3>, <&kp F4>;
        };

        f5_6: f5_6 {
            compatible = "zmk,behavior-tap-dance";
            label = "F5_6";
            #binding-cells = <0>;
            bindings = <&kp F5>, <&kp F6>;
        };

        f7_8: f7_8 {
            compatible = "zmk,behavior-tap-dance";
            label = "F7_8";
            #binding-cells = <0>;
            bindings = <&kp F7>, <&kp F8>;
        };

        f9_10: f9_10 {
            compatible = "zmk,behavior-tap-dance";
            label = "F9_10";
            #binding-cells = <0>;
            bindings = <&kp F9>, <&kp F10>;
        };

        f11_12: f11_12 {
            compatible = "zmk,behavior-tap-dance";
            label = "F11_12";
            #binding-cells = <0>;
            bindings = <&kp F11>, <&kp F12>;
        };

        slow_mod: slow_mod {
            compatible = "zmk,behavior-hold-tap";
            label = "SLOW_MOD";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <750>;
            flavor = "balanced";
        };

        long_hold_bt: long_hold_bt {
            compatible = "zmk,behavior-hold-tap";
            label = "LONG_HOLD_BT";
            bindings = <&bt>, <&bt>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <1000>;
        };

        long_hold_kp: long_hold_kp {
            compatible = "zmk,behavior-hold-tap";
            label = "LONG_HOLD_KP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <1000>;
            flavor = "tap-preferred";
        };
    };

    macros {
        increase_window: increase_window {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(W) &kp GREATER_THAN>;
            label = "INCREASE_WINDOW";
        };

        decrese_window: decrese_window {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(W) &kp LESS_THAN>;
            label = "DECRESE_WINDOW";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q                  &kp W                  &kp E                  &kp R                  &kp T    &kp Y  &kp U        &kp I        &kp O             &kp P
&slow_mod LEFT_GUI A   &slow_mod LALT S       &mt LCTRL D            &mt LSHFT F            &kp G    &kp H  &mt LSHFT J  &mt LCTRL K  &slow_mod LALT L  &slow_mod LEFT_GUI SEMICOLON
&long_hold_kp LC(Z) Z  &long_hold_kp LC(X) X  &long_hold_kp LC(C) C  &long_hold_kp LC(V) V  &kp B    &kp N  &kp M        &kp COMMA    &kp PERIOD        &kp SLASH
&kp SPACE              &lt 1 TAB                                                                                                      &lt 2 RET         &lt 3 BSPC
            >;
        };

        num {
            bindings = <
&none         &none         &kp LG(NUMBER_4)        &kp LG(N5)                   &kp LG(NUMBER_1)    &kp EQUAL  &kp N7                   &kp N8        &kp N9                 &kp N0
&kp LEFT_GUI  &kp LEFT_ALT  &mt LCTRL LG(NUMBER_6)  &mt LEFT_SHIFT LG(NUMBER_7)  &kp LG(NUMBER_2)    &kp MINUS  &mt LEFT_SHIFT NUMBER_4  &mt LCTRL N5  &mt LEFT_ALT NUMBER_6  &mt LEFT_GUI BACKSLASH
&none         &none         &kp LG(N8)              &kp LG(N9)                   &kp LG(NUMBER_3)    &kp SQT    &kp NUMBER_1             &kp NUMBER_2  &kp NUMBER_3           &kp GRAVE
&none         &none                                                                                                                                    &kp ENTER              &kp BACKSPACE
            >;
        };

        sym {
            bindings = <
&kp TILDE      &kp GRAVE     &kp HASH    &kp LEFT_BRACKET      &kp RIGHT_BRACKET        &kp HOME        &kp PG_DN  &kp PG_UP     &kp END   &none
&kp PIPE       &kp ASTERISK  &kp PLUS    &kp LEFT_BRACE        &kp RIGHT_BRACE          &kp LEFT_ARROW  &kp DOWN   &kp UP_ARROW  &kp DOWN  &kp LEFT_GUI
&kp BACKSLASH  &kp CARET     &kp DOLLAR  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS    &none           &none      &none         &none     &none
&kp SPACE      &kp TAB                                                                                                           &none     &none
            >;
        };

        misc {
            bindings = <
&f1_2      &f3_4    &kp C_BRIGHTNESS_INC  &kp LC(PLUS)                   &kp C_VOLUME_UP      &caps_word  &none          &kp LEFT_BRACKET  &none         &none
&f5_6      &f7_8    &kp C_BRIGHTNESS_DEC  &mt LEFT_SHIFT LC(UNDERSCORE)  &kp C_VOLUME_DOWN    &kp ESCAPE  &kp SEMICOLON  &kp SQT           &kp LEFT_ALT  &kp LEFT_GUI
&f9_10     &f11_12  &decrese_window       &increase_window               &kp K_MUTE           &none       &none          &none             &none         &none
&kp SPACE  &kp TAB                                                                                                                         &trans        &trans
            >;
        };

        fun {
            bindings = <
&trans  &trans  &trans  &trans  &trans    &trans  &kp F7  &kp F8  &kp F9  &kp F10
&trans  &trans  &trans  &trans  &trans    &trans  &kp F4  &kp F5  &kp F6  &kp F11
&trans  &trans  &trans  &trans  &trans    &trans  &kp F1  &kp F2  &kp F3  &kp F12
&trans  &trans                                                    &trans  &trans
            >;
        };
    };
};
