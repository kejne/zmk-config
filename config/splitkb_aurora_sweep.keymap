/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define BASE    0
#define NUM     1
#define SYM     2
#define NAV     3
#define MOUSE   4

&mt {
    //  flavor = "tap-preferred";
    // tapping_term_ms = <200>;
};

/ {
    combos {
        compatible = "zmk,combos";

        Esc {
            bindings = <&kp ESCAPE>;
            key-positions = <30 31>;
        };

        delete_thumb {
            bindings = <&kp DEL>;
            key-positions = <33 32>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q           &kp W          &kp F        &kp P        &kp B    &kp J  &kp L        &kp U        &kp Y         &kp SQT
&mt LEFT_GUI A  &mt LALT R     &mt LCTRL S  &mt LSHFT T  &kp G    &kp M  &mt LSHFT N  &mt LCTRL E  &mt LALT I    &mt LGUI O
&kp Z           &mt RALT X     &mt SPACE C  &kp D        &kp V    &kp K  &kp H        &kp COMMA    &mt RALT DOT  &kp SLASH
&lt NAV SPACE   &lt MOUSE TAB                                                                      &lt SYM RET   &lt NUM BSPC
            >;
        };

        num_layer {
            bindings = <
&kp LEFT_BRACKET  &kp N7        &kp N8        &kp N9        &kp RIGHT_BRACKET    &none       &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &none         &none
&kp BACKSLASH     &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp EQUAL            &caps_word  &kp RIGHT_SHIFT   &kp LEFT_CONTROL   &kp LEFT_ALT  &kp RIGHT_GUI
&kp GRAVE         &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp SEMICOLON        &kp MINUS   &kp GRAVE         &kp LBKT           &kp RBKT      &kp DEL
&kp N0            &kp MINUS                                                                                                       &none         &none
            >;
        };

        sym_layer {
            bindings = <
&kp BANG              &kp ATSN               &kp HASH   &kp LEFT_BRACKET  &kp RIGHT_BRACKET    &kp CRRT           &kp AMPS           &kp RA(LEFT_BRACKET)  &kp LPRN  &kp RPRN
&kp HASH              &kp QMARK              &kp FSLH   &kp LEFT_BRACE    &kp RIGHT_BRACE      &kp RA(SEMICOLON)  &kp RA(SEMICOLON)  &kp RA(SQT)           &kp RBRC  &kp BKSP
&kp LSFT              &kp KPLS               &kp GRAVE  &kp AT_SIGN       &kp EXCLAMATION      &kp UNDER          &kp LEFT           &kp DOWN              &kp UP    &kp RIGHT
&kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS                                                                                                                &none     &none
            >;
        };

        nav {
            bindings = <
&none     &none     &none      &none      &none    &kp LC(Z)  &kp LC(V)  &kp LC(C)  &kp LC(X)  &kp LC(Y)
&kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &none    &kp LEFT   &kp DOWN   &kp UP     &kp RIGHT  &caps_word
&none     &kp RALT  &none      &none      &none    &kp HOME   &kp PG_DN  &kp PG_UP  &kp END    &kp INS
&none     &none                                                                     &kp RET    &kp BSPC
            >;
        };

        mouse {
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &trans         &trans             &trans      &trans
&kp F1        &kp F2        &kp F3        &kp F4        &kp F5          &trans  &kp LC(PG_UP)  &kp LC(PAGE_DOWN)  &kp K_MUTE  &trans
&bt BT_CLR    &bt BT_NXT    &bt BT_PRV    &kp F6        &kp F7          &trans  &kp PG_DN      &kp K_VOL_DN       &trans      &trans
&trans        &trans                                                                                              &trans      &trans
            >;
        };

        fun {
            bindings = <
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &kp F1  &kp F2  &kp F3  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans                                                    &trans  &trans
            >;

            label = "fun";
        };
    };
};
