/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define BASE    0
#define NUM     1
#define SYM     2
#define NAV     3
#define MOUSE   4

&mt {
    //  flavor = "tap-preferred";
    // tapping_term_ms = <200>;
};

/ {
    combos {
        compatible = "zmk,combos";

        Esc {
            bindings = <&kp ESCAPE>;
            key-positions = <30 31>;
        };

        delete_thumb {
            bindings = <&kp DEL>;
            key-positions = <33 32>;
        };
    };

    behaviors {
        f1_2: f1_2 {
            compatible = "zmk,behavior-tap-dance";
            label = "F1_2";
            #binding-cells = <0>;
            bindings = <&kp F1>, <&kp F2>;
        };

        f3_4: f3_4 {
            compatible = "zmk,behavior-tap-dance";
            label = "F3_4";
            #binding-cells = <0>;
            bindings = <&kp F3>, <&kp F4>;
        };

        f5_6: f5_6 {
            compatible = "zmk,behavior-tap-dance";
            label = "F5_6";
            #binding-cells = <0>;
            bindings = <&kp F5>, <&kp F6>;
        };

        f7_8: f7_8 {
            compatible = "zmk,behavior-tap-dance";
            label = "F7_8";
            #binding-cells = <0>;
            bindings = <&kp F7>, <&kp F8>;
        };

        f9_10: f9_10 {
            compatible = "zmk,behavior-tap-dance";
            label = "F9_10";
            #binding-cells = <0>;
            bindings = <&kp F9>, <&kp F10>;
        };

        f11_12: f11_12 {
            compatible = "zmk,behavior-tap-dance";
            label = "F11_12";
            #binding-cells = <0>;
            bindings = <&kp F11>, <&kp F12>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q           &kp W       &kp F        &kp P        &kp B    &kp J  &kp L        &kp U        &kp Y         &kp SQT
&mt LEFT_GUI A  &mt LALT R  &mt LCTRL S  &mt LSHFT T  &kp G    &kp M  &mt LSHFT N  &mt LCTRL E  &mt LALT I    &mt LGUI O
&kp Z           &mt RALT X  &mt SPACE C  &kp D        &kp V    &kp K  &kp H        &kp COMMA    &mt RALT DOT  &kp SLASH
&lt 3 SPACE     &lt 1 TAB                                                                       &lt 2 RET     &lt 4 BSPC
            >;
        };

        num {
            bindings = <
&none         &none         &kp LG(NUMBER_4)        &kp LG(N5)                   &kp LG(NUMBER_1)    &kp LEFT_BRACKET  &kp N7        &kp N8        &kp N9        &kp RIGHT_BRACKET
&kp LEFT_GUI  &kp LEFT_ALT  &mt LCTRL LG(NUMBER_6)  &mt LEFT_SHIFT LG(NUMBER_7)  &kp LG(NUMBER_2)    &kp EQUAL         &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp BACKSLASH
&none         &none         &kp LG(N8)              &kp LG(N9)                   &kp LG(NUMBER_3)    &kp SEMICOLON     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp GRAVE
&none         &none                                                                                                                                &kp MINUS     &kp N0
            >;
        };

        sym {
            bindings = <
&kp LESS_THAN         &kp GREATER_THAN       &kp HASH    &kp LEFT_BRACKET  &kp RIGHT_BRACKET    &none       &none                         &kp RA(LEFT_BRACKET)  &none         &none
&kp HASH              &kp QMARK              &kp PIPE    &kp LEFT_BRACE    &kp RIGHT_BRACE      &kp ESCAPE  &mt LEFT_SHIFT RA(SEMICOLON)  &mt LCTRL RA(SQT)     &kp LEFT_ALT  &kp LEFT_GUI
&kp BACKSLASH         &kp CARET              &kp DOLLAR  &kp AT_SIGN       &kp EXCLAMATION      &none       &none                         &none                 &none         &none
&kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS                                                                                                                     &none         &none
            >;
        };

        nav {
            bindings = <
&kp LC(Y)  &kp LC(X)  &kp LC(C)  &kp LC(V)       &kp LC(Z)     &kp LC(Z)  &kp LC(V)  &kp LC(C)  &kp LC(X)  &kp LC(Y)
&kp LGUI   &kp LALT   &kp LCTRL  &kp LEFT_SHIFT  &kp ESCAPE    &kp LEFT   &kp DOWN   &kp UP     &kp RIGHT  &caps_word
&none      &kp RALT   &none      &none           &none         &kp HOME   &kp PG_DN  &kp PG_UP  &kp END    &kp INS
&none      &none                                                                                &kp RET    &kp BSPC
            >;
        };

        scroll {
            bindings = <
&f1_2      &f3_4    &kp LC(PLUS)   &kp K_SCROLL_UP    &kp C_VOLUME_UP      &bt BT_SEL 0  &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3  &bt BT_SEL 4
&f5_6      &f7_8    &kp LC(MINUS)  &kp K_SCROLL_DOWN  &kp C_VOLUME_DOWN    &kp ESCAPE    &kp LC(PG_DN)  &kp LC(PG_DN)  &kp LEFT_ALT  &kp LEFT_GUI
&f9_10     &f11_12  &kp F9         &caps_word         &kp K_MUTE           &caps_word    &none          &none          &trans        &bt BT_CLR
&kp SPACE  &kp TAB                                                                                                     &trans        &trans
            >;
        };
    };
};
